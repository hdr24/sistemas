{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Repositorio de sistemas","title":"Repositorio de sistemas"},{"location":"#repositorio-de-sistemas","text":"","title":"Repositorio de sistemas"},{"location":"Instalacion/","text":"Instalaci\u00f3n de Docker Desktop en Fedora 37 La versi\u00f3n de Docker Desktop nos permite lanzar contenedores tanto en modo gr\u00e1fico como desde la terminal. Requisitos previos Para instalar Docker necesitamos la terminal de Gnome, como uso KDE, voy a instalar la terminal con el siguiente comando ``` sudo dnf install gnome-terminal-3.46.8-1.fc37.x86_64 ## Instalaci\u00f3n Una vez instalada vamos a a\u00f1adir los repositorios de Docker sudo dnf -y install dnf-plugins-core sudo dnf config-manager \\ --add-repo \\ https://download.docker.com/linux/fedora/docker-ce.repo Despu\u00e9s descargamos el archivo rpm de docker y abrimos la carpeta de descarga en la terminal. He descargado la versi\u00f3n 4.18.0 as\u00ed que la instalo con el siguiente comando sudo dnf install ./docker-desktop-4.18.0-x86_64.rpm El instalador nos pedir\u00e1 que importemos la clave gpg de Docker, le damos a Y para aceptar. ## Comprobaciones Una vez instalado lo iniciaremos con el siguiente comando systemctl --user enable docker-desktop Si queremos que Docker se inicialice cada vez que se reinicie el ordenador ejecutamos lo siguiente systemctl --user enable docker-desktop Podemos comprobar si se ha instalado correctamente viendo la version de Docker y tambi\u00e9n ejecutando un contenedor de prueba. docker -v docker run hello-world Docker descargar\u00e1 el contenedor y lo ejecutar\u00e1. Si lo ejecuta correctamente mostrar\u00e1 este mensaje Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ ``` Hecho esto, ya est\u00e1 instalado docker desktop y podremos iniciar contenedores en modo gr\u00e1fico .","title":"Inicio contenedores"},{"location":"Instalacion/#instalacion-de-docker-desktop-en-fedora-37","text":"La versi\u00f3n de Docker Desktop nos permite lanzar contenedores tanto en modo gr\u00e1fico como desde la terminal.","title":"Instalaci\u00f3n de Docker Desktop en Fedora 37"},{"location":"Instalacion/#requisitos-previos","text":"Para instalar Docker necesitamos la terminal de Gnome, como uso KDE, voy a instalar la terminal con el siguiente comando ``` sudo dnf install gnome-terminal-3.46.8-1.fc37.x86_64 ## Instalaci\u00f3n Una vez instalada vamos a a\u00f1adir los repositorios de Docker sudo dnf -y install dnf-plugins-core sudo dnf config-manager \\ --add-repo \\ https://download.docker.com/linux/fedora/docker-ce.repo Despu\u00e9s descargamos el archivo rpm de docker y abrimos la carpeta de descarga en la terminal. He descargado la versi\u00f3n 4.18.0 as\u00ed que la instalo con el siguiente comando sudo dnf install ./docker-desktop-4.18.0-x86_64.rpm El instalador nos pedir\u00e1 que importemos la clave gpg de Docker, le damos a Y para aceptar. ## Comprobaciones Una vez instalado lo iniciaremos con el siguiente comando systemctl --user enable docker-desktop Si queremos que Docker se inicialice cada vez que se reinicie el ordenador ejecutamos lo siguiente systemctl --user enable docker-desktop Podemos comprobar si se ha instalado correctamente viendo la version de Docker y tambi\u00e9n ejecutando un contenedor de prueba. docker -v docker run hello-world Docker descargar\u00e1 el contenedor y lo ejecutar\u00e1. Si lo ejecuta correctamente mostrar\u00e1 este mensaje Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ ``` Hecho esto, ya est\u00e1 instalado docker desktop y podremos iniciar contenedores en modo gr\u00e1fico .","title":"Requisitos previos"},{"location":"ServidorNginx/","text":"Instalaci\u00f3n del servidor nginx Pantallazo donde se vea la creaci\u00f3n del contenedor y podamos comprobar que el contenedor est\u00e1 funcionando. Pantallazo donde se vea el acceso al servidor web utilizando un navegador web (recuerda que tienes que acceder a la ip del ordenador donde tengas instalado docker) Pantallazo donde se vean las im\u00e1genes que tienes en tu registro local. Pantallazo donde se vea como se elimina el contenedor (recuerda que antes debe estar parado el contenedor).","title":"Servidor de Nginx"},{"location":"ServidorNginx/#instalacion-del-servidor-nginx","text":"Pantallazo donde se vea la creaci\u00f3n del contenedor y podamos comprobar que el contenedor est\u00e1 funcionando. Pantallazo donde se vea el acceso al servidor web utilizando un navegador web (recuerda que tienes que acceder a la ip del ordenador donde tengas instalado docker) Pantallazo donde se vean las im\u00e1genes que tienes en tu registro local. Pantallazo donde se vea como se elimina el contenedor (recuerda que antes debe estar parado el contenedor).","title":"Instalaci\u00f3n del servidor nginx"},{"location":"iniciocontenedores/","text":"Abrimos Docker desde el lanzador de aplicaciones o desde la consola con el comando systemctl --user start docker-desktop La primera vez que lo abrimos nos pide que aceptemos los t\u00e9rminos de uso. Tambi\u00e9n nos mostrar\u00e1 un peque\u00f1o formulario para saber el uso que le vamos a dar a Docker. Una vez hecho esto podemos a\u00f1adir contenedores. Vamos a descargar el contenedor de bienvenida de Docker con git git clone https://github.com/docker/welcome-to-docker Entramos en la carpeta que hemos descargado de git y creamos un archivo Dockerfile. En el Dockerfile escribimos las instrucciones. Estas son las instrucciones que nos da Docker para su contenedor de bienvenida. # syntax=docker/dockerfile:1 # Start your image with a node base image FROM node:18-alpine # Create an application directory RUN mkdir -p /app # Set the /app directory as the working directory for any command that follows WORKDIR /app # Copy the local app package and package-lock.json file to the container COPY package*.json ./ # Copy local directories to the working directory of our docker image (/app) COPY ./src ./src COPY ./public ./public # Install node packages, install serve, build the app, and remove dependencies at the end RUN npm install \\ && npm install -g serve \\ && npm run build \\ && rm -fr node_modules # Specify that the application in the container listens on port 3000 EXPOSE 3000 # Start the app using serve command CMD [ \"serve\", \"-s\", \"build\" ] Docker necesita una imagen para ejecutar el contenedor, la construiremos con el siguiente comando docker build -t welcome-to-docker . Al construir con \u00e9xito la imagen, aparecer\u00e1 en Images en Docker Desktop. Le damos al bot\u00f3n de run y en configuraciones opcionales ponemos el puerto en el que se va a desplegar el contenedor. Hecho esto le damos a run y se desplegar\u00e1 el contenedor. Si entramos en localhost:8089 podemos comprobar que nuestro contenedor se ha desplegado con \u00e9xito.","title":"Instalaci\u00f3n de Docker en Fedora"}]}